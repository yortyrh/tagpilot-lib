/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare const enum AudioImageType {
  Icon = 'Icon',
  OtherIcon = 'OtherIcon',
  CoverFront = 'CoverFront',
  CoverBack = 'CoverBack',
  Leaflet = 'Leaflet',
  Media = 'Media',
  LeadArtist = 'LeadArtist',
  Artist = 'Artist',
  Conductor = 'Conductor',
  Band = 'Band',
  Composer = 'Composer',
  Lyricist = 'Lyricist',
  RecordingLocation = 'RecordingLocation',
  DuringRecording = 'DuringRecording',
  DuringPerformance = 'DuringPerformance',
  ScreenCapture = 'ScreenCapture',
  BrightFish = 'BrightFish',
  Illustration = 'Illustration',
  BandLogo = 'BandLogo',
  PublisherLogo = 'PublisherLogo',
  Other = 'Other',
}

export interface AudioTags {
  title?: string
  artists?: Array<string>
  album?: string
  year?: number
  genre?: string
  track?: Position
  albumArtists?: Array<string>
  comment?: string
  disc?: Position
  image?: Image
  allImages?: Array<Image>
}

export declare function clearTags(filePath: string): Promise<void>

export declare function clearTagsToBuffer(buffer: Buffer): Promise<Buffer>

export interface Image {
  data: Buffer
  picType: AudioImageType
  mimeType?: string
  description?: string
}

export interface Position {
  no?: number
  of?: number
}

export declare function readCoverImageFromBuffer(buffer: Buffer): Promise<Buffer | null>

export declare function readCoverImageFromFile(filePath: string): Promise<Buffer | null>

export declare function readTags(filePath: string): Promise<AudioTags>

export declare function readTagsFromBuffer(buffer: Buffer): Promise<AudioTags>

export declare function writeCoverImageToBuffer(buffer: Buffer, imageData: Buffer): Promise<Buffer>

export declare function writeCoverImageToFile(filePath: string, imageData: Buffer): Promise<void>

export declare function writeTags(filePath: string, tags: AudioTags): Promise<void>

export declare function writeTagsToBuffer(buffer: Buffer, tags: AudioTags): Promise<Buffer>
